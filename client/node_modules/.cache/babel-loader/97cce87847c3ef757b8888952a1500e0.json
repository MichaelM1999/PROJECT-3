{"ast":null,"code":"var _jsxFileName = \"/Users/michaelmariea/Desktop/PROJECT-3/client/src/components/stockrec.js\";\nimport React, { Component } from 'react';\nimport '../css/recomend.css';\nimport API from '../utils/stockApi';\n\nclass Recomend extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stock: \"\",\n      stockArry: [\"AMZN\", \"GOOGL\", \"GOOG\", \"JNJ\", \"BRK.B\", \"JPM\", \"DIS\"],\n      value: \"\",\n      changePercentage: \"\",\n      priceArray: \"\",\n      dateArray: \"\",\n      upDown: \"\"\n    };\n\n    this.searchData = query => {\n      const priceArray = [];\n      const dateArray = [];\n      API.search(query).then(res => {\n        const dailySeries = res.data[\"Time Series (Daily)\"];\n\n        for (let key in dailySeries) {\n          // console.log('Time: ', key, 'price: ' ,dailySeries[key]['4. close']);\n          dateArray.push([key][0]);\n          priceArray.push(dailySeries[key]['4. close']);\n        }\n\n        this.setState({\n          priceArray: priceArray,\n          dateArray: dateArray\n        });\n        this.setState({\n          changePercentage: (this.state.priceArray[0] / this.state.priceArray[1] * 100 - 100).toString().slice(0, 4) + \"%\"\n        });\n        console.log(this.state.changePercentage);\n      });\n\n      if (Math.sign(this.state.changePercentage) === 1) {\n        this.setState({\n          upDown: \"green\"\n        });\n      } else {\n        this.setState({\n          upDown: \"red\"\n        });\n      } // if (this.state.upDown === \"up\") {\n      // }\n\n    };\n\n    this.currentStock = () => {\n      let i = 0;\n      const interval = setInterval(() => {\n        console.log(this.state.stockArry[i]);\n        let switchedStock = this.state.stockArry[i];\n        i += 1;\n        this.setState({\n          stock: switchedStock\n        });\n        this.searchData(this.state.stock);\n\n        if (i >= this.state.stockArry.length) {\n          clearInterval(interval);\n          this.currentStock();\n        }\n      }, 13000);\n    };\n  }\n\n  componentDidMount() {\n    this.currentStock();\n  }\n\n  render() {\n    {\n      if (this.state.changePercentage === NaN || this.state.changePercentage === \"\") {\n        return React.createElement(\"div\", {\n          className: \"recomendBX\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"stockTxt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"Popular Stocks\"), React.createElement(\"h3\", {\n          className: \"stockTxt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"please wait for our slow API ;)\"));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"recomendBX\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"stockTxt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"Popular Stocks\"), React.createElement(\"h3\", {\n          className: \"stockTxt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, this.state.stock), React.createElement(\"p\", {\n          className: \"changepercent stockTxt\",\n          style: {\n            'color': this.state.upDown\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, this.state.changePercentage));\n      }\n    }\n  }\n\n}\n\nexport default Recomend;","map":{"version":3,"sources":["/Users/michaelmariea/Desktop/PROJECT-3/client/src/components/stockrec.js"],"names":["React","Component","API","Recomend","state","stock","stockArry","value","changePercentage","priceArray","dateArray","upDown","searchData","query","search","then","res","dailySeries","data","key","push","setState","toString","slice","console","log","Math","sign","currentStock","i","interval","setInterval","switchedStock","length","clearInterval","componentDidMount","render","NaN"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport '../css/recomend.css';\nimport API from '../utils/stockApi';\n\nclass Recomend extends Component{\n\n  componentDidMount(){\n    this.currentStock();\n  }\n  \n  state = {\n    stock: \"\",\n    stockArry :[\"AMZN\",\"GOOGL\",\"GOOG\",\"JNJ\",\"BRK.B\",\"JPM\",\"DIS\"],\n    value: \"\",\n    changePercentage: \"\",\n    priceArray: \"\",\n    dateArray: \"\",\n    upDown: \"\",\n  }\n  \n  searchData = query => {\n    const priceArray = [];\n    const dateArray = [];\n    API.search(query)\n    .then(res => {\n      const dailySeries = res.data[\"Time Series (Daily)\"];\n      for (let key in dailySeries){\n        // console.log('Time: ', key, 'price: ' ,dailySeries[key]['4. close']);\n        dateArray.push([key][0])\n        priceArray.push(dailySeries[key]['4. close']);\n      }\n    this.setState({priceArray: priceArray,\n        dateArray: dateArray,\n    })\n    this.setState({changePercentage: (((this.state.priceArray[0])/(this.state.priceArray[1])*100)-100).toString().slice(0,4)+\"%\"})\n    console.log(this.state.changePercentage)\n    })\n    if (Math.sign(this.state.changePercentage) === 1){\n      this.setState({upDown: \"green\"})\n    } else {\n      this.setState({upDown: \"red\"})\n    }\n    // if (this.state.upDown === \"up\") {\n\n    // }\n  }\n    \n  currentStock = () => {\n    let i = 0;\n    const interval = setInterval(() => {\n    console.log(this.state.stockArry[i]);\n    let switchedStock = this.state.stockArry[i];\n    i += 1;\n    this.setState({\n      stock: switchedStock\n    });\n    this.searchData(this.state.stock)\n    if (i >= this.state.stockArry.length) {\n      clearInterval(interval)\n      this.currentStock();\n      \n    }\n    }, 13000);\n  }\n\n    render(){\n        {if (this.state.changePercentage === NaN || this.state.changePercentage === \"\"){\n        return(\n          <div className=\"recomendBX\">\n          <p className=\"stockTxt\">Popular Stocks</p>\n          <h3 className=\"stockTxt\">please wait for our slow API ;)</h3>\n        </div>\n        )\n        } else {\n        return(\n        <div className=\"recomendBX\">\n          <p className=\"stockTxt\">Popular Stocks</p>\n          <h3 className=\"stockTxt\">{this.state.stock}</h3>\n        <p className=\"changepercent stockTxt\" style={{'color': this.state.upDown}}>\n          {this.state.changePercentage}\n        </p>\n        </div>\n    )\n  }}\n  }\n}\nexport default Recomend"]},"metadata":{},"sourceType":"module"}