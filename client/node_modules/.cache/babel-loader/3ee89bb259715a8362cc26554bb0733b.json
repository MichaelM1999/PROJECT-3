{"ast":null,"code":"var _jsxFileName = \"/Users/michaelmariea/Desktop/PROJECT-3/project3/client/src/components/pages/search.js\";\nimport React, { Component } from 'react';\nimport API from '../../utils/stockApi';\nimport * as moment from 'moment';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nconst Plotly = window.Plotly;\nconst Plot = createPlotlyComponent(Plotly); //time js for recent date so even on weekends it gets correct numbers\n\nconst year = moment().format(\"YYYY\");\nconst month = moment().format(\"MM\");\nconst day = moment().format(\"DD\");\nlet todaysdate;\nconst dayofweek = moment().format(\"dddd\");\n\nif (dayofweek === \"Monday\" || dayofweek === \"Tuesday\" || dayofweek === \"Wednesday\" || dayofweek === \"Thursday\" || dayofweek === \"Friday\") {\n  todaysdate = [year, month, day].join('-');\n}\n\nif (dayofweek === \"Sunday\") {\n  let recentday = moment().subtract(2, 'days').format(\"DD\");\n  todaysdate = [year, month, recentday].join('-');\n}\n\nif (dayofweek === \"Saturday\") {\n  let recentday = moment().subtract(1, 'days').format(\"DD\");\n  todaysdate = [year, month, recentday].join('-');\n}\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      StockName: \"\",\n      price: \"\",\n      volume: \"\"\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.stocksearch = query => {\n      const priceArray = [];\n      const dateArray = [];\n      API.search(query).then(res => {\n        const dailySeries = res.data[\"Time Series (Daily)\"];\n\n        for (let key in dailySeries) {\n          // console.log('Time: ', key, 'price: ' ,dailySeries[key]['4. close']);\n          dateArray.push([key][i]);\n          priceArray.push(dailySeries[key]['4. close']);\n          console.log(priceArray, dateArray);\n        }\n\n        this.setState({\n          price: res.data[\"Time Series (Daily)\"][todaysdate][\"4. close\"],\n          volume: res.data[\"Time Series (Daily)\"][todaysdate][\"6. volume\"],\n          StockName: res.data[\"Meta Data\"][\"2. Symbol\"]\n        }, console.log(res), console.log(this.state));\n      }, err => {\n        console.log(err);\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let stock = this.state.StockName;\n      this.stocksearch(stock);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.todaysdate), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"what would you like to search for\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"StockName\",\n      onChange: this.handleInputChange,\n      value: this.state.StockName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Search\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"searching for \", this.state.StockName), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"The Price is $\", this.state.price), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"there are currently \", this.state.volume, \" open for purchase\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Plot, {\n      data: [{\n        x: [1, 2, 3, 4],\n        y: [this.state.price, 15, 13, 17],\n        type: 'scatter'\n      }],\n      layout: {\n        width: 320,\n        height: 240,\n        title: this.state.StockName\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/michaelmariea/Desktop/PROJECT-3/project3/client/src/components/pages/search.js"],"names":["React","Component","API","moment","createPlotlyComponent","Plotly","window","Plot","year","format","month","day","todaysdate","dayofweek","join","recentday","subtract","Search","state","StockName","price","volume","handleInputChange","event","target","name","value","setState","stocksearch","query","priceArray","dateArray","search","then","res","dailySeries","data","key","push","i","console","log","err","handleSubmit","preventDefault","stock","render","x","y","type","width","height","title"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport API from '../../utils/stockApi';\nimport * as moment from 'moment';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nconst Plotly = window.Plotly;\nconst Plot = createPlotlyComponent(Plotly);\n\n//time js for recent date so even on weekends it gets correct numbers\nconst year = moment().format(\"YYYY\");\nconst month = moment().format(\"MM\");\nconst day = moment().format(\"DD\");\nlet todaysdate;\n\nconst dayofweek = moment().format(\"dddd\");\nif (dayofweek === \"Monday\" || \ndayofweek === \"Tuesday\" || \ndayofweek === \"Wednesday\" || \ndayofweek === \"Thursday\" || \ndayofweek === \"Friday\") {\ntodaysdate = [year, month, day].join('-');\n}\nif (dayofweek === \"Sunday\") {\n   let recentday = (moment().subtract(2, 'days').format(\"DD\"));\n   todaysdate = [year, month, recentday].join('-');\n}\nif (dayofweek === \"Saturday\") {\n    let recentday = (moment().subtract(1, 'days').format(\"DD\"));\n    todaysdate = [year, month, recentday].join('-');\n}\nclass Search extends Component{\n    state = {\n        StockName: \"\",\n        price:\"\",\n        volume: \"\",\n    }\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n          [name]: value\n        });\n    }\n    stocksearch = query => {\n        const priceArray = [];\n        const dateArray = [];\n        API.search(query)\n        .then(res => {\n            \n            \n        const dailySeries = res.data[\"Time Series (Daily)\"];\n        \n        for (let key in dailySeries){\n            // console.log('Time: ', key, 'price: ' ,dailySeries[key]['4. close']);\n            dateArray.push([key][i])\n            priceArray.push(dailySeries[key]['4. close']);\n            console.log(priceArray, dateArray);\n        }\n\n          \n        this.setState({ price: res.data[\"Time Series (Daily)\"][todaysdate][\"4. close\"],\n                volume: res.data[\"Time Series (Daily)\"][todaysdate][\"6. volume\"],\n                StockName: res.data[\"Meta Data\"][\"2. Symbol\"]},\n                console.log(res),\n                console.log(this.state),\n                )\n    \n        },\n      err => {\n        console.log(err);\n     }); \n    }\n\n    handleSubmit = event => {\n        event.preventDefault()\n        let stock = this.state.StockName\n        this.stocksearch(stock);\n    }\n    render(){\n        return(\n            <div>\n                <h1>{this.state.todaysdate}</h1>\n                <div>what would you like to search for</div>\n                <input\n                type=\"text\"\n                name=\"StockName\"\n                onChange={this.handleInputChange}\n                value={this.state.StockName}\n                ></input>\n                <button \n                type=\"submit\" \n                value=\"submit\"\n                onClick={this.handleSubmit}\n                >Search</button>\n                <h2>\n                    searching for {(this.state.StockName)}\n                </h2>\n                <h3>\n                    The Price is ${this.state.price}\n                </h3>\n                <h3>\n                    there are currently {this.state.volume} open for purchase\n                </h3>\n                <div\n\n                ></div>\n                    <Plot\n                            data={[{\n                                x: [1, 2, 3, 4],\n                                y: [this.state.price, 15, 13, 17],\n                                type: 'scatter'\n                              }]}\n                              layout={ {width: 320, height: 240, title: this.state.StockName} }   />\n            </div>\n\n        )\n\n    }\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}