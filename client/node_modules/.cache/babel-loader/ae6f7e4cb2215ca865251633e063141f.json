{"ast":null,"code":"var _jsxFileName = \"/Users/michaelmariea/Desktop/PROJECT-3/client/src/components/pages/search.js\";\nimport React, { Component } from 'react';\nimport API from '../../utils/stockApi3';\nimport * as moment from 'moment';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport Recomend from '../stockrec';\nimport Recomend2 from '../stockrec2';\nimport '../../css/search.css';\nimport Footer from '../footer';\nimport Header from '../header';\nimport APIR from '../../utils/api';\nconst Plotly = window.Plotly;\nconst Plot = createPlotlyComponent(Plotly); //time js for recent date so even on weekends it gets correct numbers\n\nconst year = moment().format(\"YYYY\");\nconst month = moment().format(\"MM\");\nconst day = moment().format(\"DD\");\nlet todaysdate;\nconst dayofweek = moment().format(\"dddd\");\n\nif (dayofweek === \"Monday\" || dayofweek === \"Tuesday\" || dayofweek === \"Wednesday\" || dayofweek === \"Thursday\" || dayofweek === \"Friday\") {\n  todaysdate = [year, month, day].join('-');\n}\n\nif (dayofweek === \"Sunday\") {\n  let recentday = moment().subtract(2, 'days').format(\"DD\");\n  todaysdate = [year, month, recentday].join('-');\n}\n\nif (dayofweek === \"Saturday\") {\n  let recentday = moment().subtract(1, 'days').format(\"DD\");\n  todaysdate = [year, month, recentday].join('-');\n}\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: \"\",\n      StockName: \"\",\n      price: \"\",\n      volume: \"\",\n      priceArray: \"\",\n      dateArray: \"\",\n      weeklygraph: true,\n      monthlygraph: false,\n      weeklychange: \"\",\n      monthlychange: \"\",\n      dailychange: \"\",\n      updownD: \"\",\n      updownW: \"\",\n      updownM: \"\",\n      followRes: \"\"\n    };\n\n    this.handlefollow = event => {\n      event.preventDefault();\n      let stock = {\n        stock: this.state.StockName,\n        user: this.state.user\n      };\n      console.log(stock);\n      APIR.newStock(stock).then(res => {\n        if (res.data.err) {\n          this.setState({\n            followRes: \"Already following \" + this.state.StockName\n          });\n          alert(this.state.followRes);\n        } else {\n          this.setState({\n            followRes: this.state.StockName + \" has been followed!\"\n          });\n          console.log(res.data);\n          console.log(\"Stock Followed\");\n        }\n      });\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.stocksearch = query => {\n      const priceArray = [];\n      const dateArray = [];\n      API.search(query).then(res => {\n        const dailySeries = res.data[\"Time Series (Daily)\"];\n\n        for (let key in dailySeries) {\n          // console.log('Time: ', key, 'price: ' ,dailySeries[key]['4. close']);\n          dateArray.push([key][0]);\n          priceArray.push(dailySeries[key]['4. close']);\n        }\n\n        this.setState({\n          priceArray: priceArray,\n          dateArray: dateArray\n        });\n        this.setState({\n          weeklychange: (this.state.priceArray[0] - this.state.priceArray[6]).toString().slice(0, 8),\n          monthlychange: (this.state.priceArray[0] - this.state.priceArray[29]).toString().slice(0, 8),\n          dailychange: (this.state.priceArray[0] - this.state.priceArray[1]).toString().slice(0, 8)\n        });\n\n        if (Math.sign(this.state.dailychange) === 1) {\n          this.setState({\n            updownD: \"up\"\n          });\n        } else {\n          this.setState({\n            updownD: \"down\"\n          });\n        }\n\n        if (Math.sign(this.state.monthlychange) === 1) {\n          this.setState({\n            updownM: \"up\"\n          });\n        } else {\n          this.setState({\n            updownM: \"down\"\n          });\n        }\n\n        if (Math.sign(this.state.weeklychange) === 1) {\n          this.setState({\n            updownW: \"up\"\n          });\n        } else {\n          this.setState({\n            updownW: \"down\"\n          });\n        }\n\n        this.setState({\n          price: res.data[\"Time Series (Daily)\"][todaysdate][\"4. close\"],\n          volume: res.data[\"Time Series (Daily)\"][todaysdate][\"6. volume\"],\n          StockName: res.data[\"Meta Data\"][\"2. Symbol\"]\n        }, console.log(res), console.log(this.state));\n      }, err => {\n        console.log(err);\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let stock = this.state.StockName;\n      this.stocksearch(stock);\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      user: sessionStorage.getItem(\"username\")\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(Recomend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(Recomend2, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, this.state.todaysdate), React.createElement(\"div\", {\n      className: \"searchbx\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"whattosearch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"What would you like to search for \", this.state.user, \"?\"), React.createElement(\"input\", {\n      className: \"wordbx\",\n      type: \"text\",\n      name: \"StockName\",\n      onChange: this.handleInputChange,\n      value: this.state.StockName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"searchSbtn\",\n      type: \"submit\",\n      value: \"submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Search\")), React.createElement(\"button\", {\n      className: \"followBtn\",\n      type: \"submit\",\n      value: \"submit\",\n      onClick: this.handlefollow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"follow\")), React.createElement(\"div\", {\n      className: \"infoTab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"searching\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Searching for \", this.state.StockName, \" is \", this.state.updownD, \" $\", this.state.dailychange, \" in the past day\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"The Price is $\", this.state.price), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"There are currently \", this.state.volume, \" shares open for purchase\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"boxes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"weeklybx\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"updown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, this.state.StockName, \" is \", this.state.updownW, \" $\", this.state.weeklychange, \" in the past week\"), React.createElement(Plot //weekly graph\n    , {\n      className: \"weekly\",\n      data: [{\n        //prices\n        x: [this.state.dateArray[0], this.state.dateArray[1], this.state.dateArray[2], this.state.dateArray[3], this.state.dateArray[4], this.state.dateArray[5], this.state.dateArray[6]],\n        //dates \n        y: [this.state.priceArray[0], this.state.priceArray[1], this.state.priceArray[2], this.state.priceArray[3], this.state.priceArray[4], this.state.priceArray[5], this.state.priceArray[6]],\n        type: 'scatter',\n        mode: \"lines\",\n        line: {\n          color: \"black\"\n        }\n      }],\n      layout: {\n        width: 450,\n        height: 450,\n        title: \"Weekly \" + this.state.StockName,\n        xaxis: {\n          title: {\n            text: 'Date',\n            font: {\n              family: 'Courier New, monospace',\n              size: 18,\n              color: 'black'\n            }\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Value in USD',\n            font: {\n              family: 'Courier New, monospace',\n              size: 18,\n              color: 'black'\n            }\n          }\n        },\n        paper_bgcolor: 'lightgray',\n        plot_bgcolor: 'lightgray',\n        transition: {\n          duration: 500,\n          easing: 'cubic-in-out'\n        },\n        frame: {\n          duration: 500\n        },\n        font: {\n          family: 'Courier New, monospace',\n          size: 18,\n          color: 'black'\n        },\n        showlegend: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"updown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, this.state.StockName, \" is \", this.state.updownM, \" $\", this.state.monthlychange, \" in the past month\"), React.createElement(\"div\", {\n      className: \"monthlybx\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Plot, {\n      className: \"monthly\",\n      data: [{\n        x: [this.state.dateArray[0], this.state.dateArray[1], this.state.dateArray[2], this.state.dateArray[3], this.state.dateArray[4], this.state.dateArray[5], this.state.dateArray[6], this.state.dateArray[7], this.state.dateArray[8], this.state.dateArray[9], this.state.dateArray[10], this.state.dateArray[11], this.state.dateArray[12], this.state.dateArray[13], this.state.dateArray[14], this.state.dateArray[15], this.state.dateArray[16], this.state.dateArray[17], this.state.dateArray[18], this.state.dateArray[19], this.state.dateArray[20], this.state.dateArray[21], this.state.dateArray[22], this.state.dateArray[23], this.state.dateArray[24], this.state.dateArray[25], this.state.dateArray[26], this.state.dateArray[27], this.state.dateArray[28], this.state.dateArray[29]],\n        //dates \n        y: [this.state.priceArray[0], this.state.priceArray[1], this.state.priceArray[2], this.state.priceArray[3], this.state.priceArray[4], this.state.priceArray[5], this.state.priceArray[6], this.state.priceArray[7], this.state.priceArray[8], this.state.priceArray[9], this.state.priceArray[10], this.state.priceArray[11], this.state.priceArray[12], this.state.priceArray[13], this.state.priceArray[14], this.state.priceArray[15], this.state.priceArray[16], this.state.priceArray[17], this.state.priceArray[18], this.state.priceArray[19], this.state.priceArray[20], this.state.priceArray[21], this.state.priceArray[22], this.state.priceArray[23], this.state.priceArray[24], this.state.priceArray[25], this.state.priceArray[26], this.state.priceArray[27], this.state.priceArray[28], this.state.priceArray[29]],\n        type: 'scatter',\n        mode: \"lines\",\n        line: {\n          color: \"black\"\n        }\n      }],\n      layout: {\n        width: 450,\n        height: 450,\n        title: \"Monthly \" + this.state.StockName,\n        xaxis: {\n          title: {\n            text: 'Date',\n            font: {\n              family: 'Courier New, monospace',\n              size: 18,\n              color: 'black'\n            }\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Value in USD',\n            font: {\n              family: 'Courier New, monospace',\n              size: 18,\n              color: 'black'\n            }\n          }\n        },\n        paper_bgcolor: 'lightgray',\n        plot_bgcolor: 'lightgray',\n        transition: {\n          duration: 500,\n          easing: 'cubic-in-out'\n        },\n        frame: {\n          duration: 500\n        },\n        font: {\n          family: 'Courier New, monospace',\n          size: 18,\n          color: 'black'\n        },\n        showlegend: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    })))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/michaelmariea/Desktop/PROJECT-3/client/src/components/pages/search.js"],"names":["React","Component","API","moment","createPlotlyComponent","Recomend","Recomend2","Footer","Header","APIR","Plotly","window","Plot","year","format","month","day","todaysdate","dayofweek","join","recentday","subtract","Search","state","user","StockName","price","volume","priceArray","dateArray","weeklygraph","monthlygraph","weeklychange","monthlychange","dailychange","updownD","updownW","updownM","followRes","handlefollow","event","preventDefault","stock","console","log","newStock","then","res","data","err","setState","alert","handleInputChange","target","name","value","stocksearch","query","search","dailySeries","key","push","toString","slice","Math","sign","handleSubmit","componentDidMount","sessionStorage","getItem","render","x","y","type","mode","line","color","width","height","title","xaxis","text","font","family","size","yaxis","paper_bgcolor","plot_bgcolor","transition","duration","easing","frame","showlegend"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport API from '../../utils/stockApi3';\nimport * as moment from 'moment';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport Recomend from '../stockrec';\nimport Recomend2 from '../stockrec2';\nimport '../../css/search.css';\nimport Footer from '../footer';\nimport Header from '../header';\nimport APIR from '../../utils/api';\nconst Plotly = window.Plotly;\nconst Plot = createPlotlyComponent(Plotly);\n\n//time js for recent date so even on weekends it gets correct numbers\nconst year = moment().format(\"YYYY\");\nconst month = moment().format(\"MM\");\nconst day = moment().format(\"DD\");\nlet todaysdate;\n\nconst dayofweek = moment().format(\"dddd\");\nif (dayofweek === \"Monday\" || \ndayofweek === \"Tuesday\" || \ndayofweek === \"Wednesday\" || \ndayofweek === \"Thursday\" || \ndayofweek === \"Friday\") {\ntodaysdate = [year, month, day].join('-');\n}\nif (dayofweek === \"Sunday\") {\n   let recentday = (moment().subtract(2, 'days').format(\"DD\"));\n   todaysdate = [year, month, recentday].join('-');\n}\nif (dayofweek === \"Saturday\") {\n    let recentday = (moment().subtract(1, 'days').format(\"DD\"));\n    todaysdate = [year, month, recentday].join('-');\n}\nclass Search extends Component{\n    state = {\n        user: \"\",\n        StockName: \"\",\n        price:\"\",\n        volume: \"\",\n        priceArray: \"\",\n        dateArray: \"\",\n        weeklygraph: true,\n        monthlygraph: false,\n        weeklychange:\"\",\n        monthlychange:\"\",\n        dailychange:\"\",\n        updownD: \"\",\n        updownW: \"\",\n        updownM: \"\",\n        followRes: \"\",\n    }\n    componentDidMount(){\n        this.setState({user: sessionStorage.getItem(\"username\")});\n    }\n    handlefollow = (event) => {\n      event.preventDefault();\n        let stock = {\n          stock: this.state.StockName,\n          user: this.state.user\n        }\n        console.log(stock);\n        APIR.newStock(stock).then(res => {\n          if(res.data.err){\n            this.setState({followRes: \"Already following \"+ this.state.StockName});\n            alert(this.state.followRes);\n          }\n          else {\n            this.setState({followRes: this.state.StockName + \" has been followed!\"});\n            console.log(res.data);\n            console.log(\"Stock Followed\");\n          }\n        })\n    }\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n          [name]: value\n        });\n    }\n    stocksearch = query => {\n        const priceArray = [];\n        const dateArray = [];\n        API.search(query)\n        .then(res => {\n            \n            \n        const dailySeries = res.data[\"Time Series (Daily)\"];\n        \n        for (let key in dailySeries){\n            // console.log('Time: ', key, 'price: ' ,dailySeries[key]['4. close']);\n            dateArray.push([key][0])\n            priceArray.push(dailySeries[key]['4. close']);\n        }\n        this.setState({priceArray: priceArray,\n            dateArray: dateArray,\n        })\n        this.setState({weeklychange: ((this.state.priceArray[0])-(this.state.priceArray[6])).toString().slice(0,8),\n            monthlychange: ((this.state.priceArray[0])-(this.state.priceArray[29])).toString().slice(0,8),\n            dailychange: ((this.state.priceArray[0])-(this.state.priceArray[1])).toString().slice(0,8)\n        })\n        if (Math.sign(this.state.dailychange) === 1){\n          this.setState({updownD: \"up\"\n          })\n        } else {\n          this.setState({updownD: \"down\"})\n        }\n        if (Math.sign(this.state.monthlychange) === 1){\n          this.setState({updownM: \"up\"\n          })\n        } else {\n          this.setState({updownM: \"down\"})\n        }\n        if (Math.sign(this.state.weeklychange) === 1){\n          this.setState({updownW: \"up\"\n          })\n        } else {\n          this.setState({updownW: \"down\"})\n        }\n        this.setState({ price: res.data[\"Time Series (Daily)\"][todaysdate][\"4. close\"],\n                volume: res.data[\"Time Series (Daily)\"][todaysdate][\"6. volume\"],\n                StockName: res.data[\"Meta Data\"][\"2. Symbol\"]},\n                console.log(res),\n                console.log(this.state),\n                )\n    \n        },\n      err => {\n        console.log(err);\n     }); \n    }\n    handleSubmit = event => {\n        event.preventDefault()\n        let stock = this.state.StockName\n        this.stocksearch(stock);\n    }\n    render(){\n        return(\n            <div>\n              <Header />\n              <Recomend />\n              <Recomend2 />\n                <h1>{this.state.todaysdate}</h1>\n                <div className=\"searchbx\">\n                    <div className=\"whattosearch\">What would you like to search for {this.state.user}?</div>\n                    <input\n                    className=\"wordbx\"\n                    type=\"text\"\n                    name=\"StockName\"\n                    onChange={this.handleInputChange}\n                    value={this.state.StockName}\n                    ></input>\n                    <button\n                    className=\"searchSbtn\" \n                    type=\"submit\" \n                    value=\"submit\"\n                    onClick={this.handleSubmit}\n                    ><span>Search</span></button>\n                    <button\n                    className=\"followBtn\"\n                    type=\"submit\"\n                    value=\"submit\"\n                    onClick={this.handlefollow}\n                    >follow</button>\n                </div>\n                  <div className=\"infoTab\">\n                    <h2 className=\"searching\">\n                        Searching for {(this.state.StockName)} is {this.state.updownD} ${this.state.dailychange} in the past day\n                    </h2>\n                    <h3>\n                        The Price is ${this.state.price}\n                    </h3>\n                    <h3>\n                        There are currently {this.state.volume} shares open for purchase\n                    </h3>\n                  \n                <div>\n                </div>\n                <div className=\"boxes\">\n                <div className=\"weeklybx\">\n                <div className=\"updown\">\n                  {this.state.StockName} is {this.state.updownW} ${this.state.weeklychange} in the past week\n                </div>\n                  <Plot\n                  //weekly graph\n                  className=\"weekly\"\n                  data={[{\n                      //prices\n                      x: [this.state.dateArray[0],\n                          this.state.dateArray[1],\n                          this.state.dateArray[2],\n                          this.state.dateArray[3],\n                          this.state.dateArray[4],\n                          this.state.dateArray[5],\n                          this.state.dateArray[6],\n                          ],\n                      //dates \n                      y: [this.state.priceArray[0], \n                          this.state.priceArray[1], \n                          this.state.priceArray[2],\n                          this.state.priceArray[3],\n                          this.state.priceArray[4],\n                          this.state.priceArray[5],\n                          this.state.priceArray[6]\n                          ],   \n                      type: 'scatter',\n                      mode: \"lines\",\n                      line: {\n                        color: \"black\"\n                      }\n                      }]}\n                      layout={{width: 450,\n                          height: 450, \n                          title: \"Weekly \" + this.state.StockName,\n                          xaxis: {\n                              title: {\n                                text: 'Date',\n                                font: {\n                                  family: 'Courier New, monospace',\n                                  size: 18,\n                                  color: 'black'\n                                }\n                              },\n                            },\n                            yaxis: {\n                              title: {\n                                text: 'Value in USD',\n                                font: {\n                                  family: 'Courier New, monospace',\n                                  size: 18,\n                                  color: 'black'\n                                }\n                              },\n                            },\n                          paper_bgcolor: 'lightgray',\n                          plot_bgcolor: 'lightgray',\n                          transition: {\n                          duration: 500,\n                          easing: 'cubic-in-out'\n                          },\n                          frame: {\n                          duration: 500\n                          },\n                          font: {\n                              family: 'Courier New, monospace',\n                              size: 18,\n                              color: 'black'\n                          },\n                          showlegend: false\n                      }}\n                  />\n                  </div>\n                <div className=\"updown\">\n                {this.state.StockName} is {this.state.updownM} ${this.state.monthlychange} in the past month\n                </div>\n                <div className=\"monthlybx\">\n                  <Plot\n                      className=\"monthly\"\n                      data={[{ \n                      x: [this.state.dateArray[0],\n                      this.state.dateArray[1],\n                      this.state.dateArray[2],\n                      this.state.dateArray[3],\n                      this.state.dateArray[4],\n                      this.state.dateArray[5],\n                      this.state.dateArray[6],\n                      this.state.dateArray[7],\n                      this.state.dateArray[8],\n                      this.state.dateArray[9],\n                      this.state.dateArray[10],\n                      this.state.dateArray[11],\n                      this.state.dateArray[12],\n                      this.state.dateArray[13],\n                      this.state.dateArray[14],\n                      this.state.dateArray[15],\n                      this.state.dateArray[16],\n                      this.state.dateArray[17],\n                      this.state.dateArray[18],\n                      this.state.dateArray[19],\n                      this.state.dateArray[20],\n                      this.state.dateArray[21],\n                      this.state.dateArray[22],\n                      this.state.dateArray[23],\n                      this.state.dateArray[24],\n                      this.state.dateArray[25],\n                      this.state.dateArray[26],\n                      this.state.dateArray[27],\n                      this.state.dateArray[28],\n                      this.state.dateArray[29],\n                      ],\n                  //dates \n                  y: [this.state.priceArray[0],\n                  this.state.priceArray[1],\n                  this.state.priceArray[2],\n                  this.state.priceArray[3],\n                  this.state.priceArray[4],\n                  this.state.priceArray[5],\n                  this.state.priceArray[6],\n                  this.state.priceArray[7],\n                  this.state.priceArray[8],\n                  this.state.priceArray[9],\n                  this.state.priceArray[10],\n                  this.state.priceArray[11],\n                  this.state.priceArray[12],\n                  this.state.priceArray[13],\n                  this.state.priceArray[14],\n                  this.state.priceArray[15],\n                  this.state.priceArray[16],\n                  this.state.priceArray[17],\n                  this.state.priceArray[18],\n                  this.state.priceArray[19],\n                  this.state.priceArray[20],\n                  this.state.priceArray[21],\n                  this.state.priceArray[22],\n                  this.state.priceArray[23],\n                  this.state.priceArray[24],\n                  this.state.priceArray[25],\n                  this.state.priceArray[26],\n                  this.state.priceArray[27],\n                  this.state.priceArray[28],\n                  this.state.priceArray[29],\n                      ],   \n                      type: 'scatter',\n                      mode: \"lines\",\n                      line: {\n                        color: \"black\"\n                      }\n                  }]}\n                  layout={{width: 450,\n                          height: 450, \n                          title: \"Monthly \" + this.state.StockName,\n                          xaxis: {\n                              title: {\n                                text: 'Date',\n                                font: {\n                                  family: 'Courier New, monospace',\n                                  size: 18,\n                                  color: 'black'\n                                }\n                              },\n                            },\n                            yaxis: {\n                              title: {\n                                text: 'Value in USD',\n                                font: {\n                                  family: 'Courier New, monospace',\n                                  size: 18,\n                                  color: 'black'\n                                }\n                              },\n                            },\n                          paper_bgcolor: 'lightgray',\n                          plot_bgcolor: 'lightgray',\n                          transition: {\n                          duration: 500,\n                          easing: 'cubic-in-out'\n                          },\n                          frame: {\n                          duration: 500\n                          },\n                          font: {\n                              family: 'Courier New, monospace',\n                              size: 18,\n                              color: 'black'\n                          },\n                          showlegend: false\n                      }}\n                          />\n                        </div>\n                      </div>\n                      </div>\n                <Footer />\n            </div>\n\n        )\n\n    }\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}